load "medit"

border a(t=0,1){x=t;y=0;};
border b(t=0,0.5){x=1;y=t;};
border c(t=0,0.5){x=1-t;y=0.5;};
border d(t=0.5,1){x=0.5;y=t;};
border e(t=0.5,1){x=1-t;y=1;};
border f(t=0,1){x=0;y=1-t;};

mesh th = buildmesh (a(6) + b(4) + c(4) +d(4) + e(4) +
    f(6));

border aa(t=0,0.2){x=0.1+t;y=0.1;};
border bb(t=0,0.2){x=0.3;y=0.1+t;};
border cc(t=0,0.2){x=0.3-t;y=0.3;};
border dd(t=0,0.2){x=0.1;y=0.3-t;};

mesh silly = buildmesh (a(3) + b(2) + c(2) +d(2) + e(2) +
	    f(3)+ aa(3) + bb(3) + cc(3) + dd(3));

fespace Ph(silly,P0);
fespace Vh(th,P2);
Vh u,v, uu,vv;

// plot(th,silly,wait=1);
Ph reg=region;

// plot(reg,fill=1,wait=1,value=1);

savemesh(silly,"Th.mesh");

int nupper=reg(0.2,0.2); // get the region number of point (0.4,0.9)
int nlower=reg(0.2,0.4);  // get the region number of point (0.4,0.1)

cout << " nlower = " <<  nlower << ", nupper = " << nupper<< endl;

Ph isInLower = (region==nlower);
Ph isInUpper = (region==nupper);

Ph numa=1-0.5*isInLower + 0.5*isInUpper;
func nu=1-0.5*isInLower + 0.5*isInUpper;

plot(silly,value=true,wait=true);
plot(numa,fill=true,value=true,wait=true);

cout << nu(0.2,0.2) << " " << nu(0.2,0.5) << " " << nu(0.7,0.7) << endl;

solve lap(u,v)	= int2d(th)(nu*( dx(u)*dx(v)+dy(u)*dy(v) ) )
		        	+ int2d(th)(-1*v)
					+ on(a,b,c,d,e,f,u= 0);

solve lap2(uu,vv)	= int2d(th)( ( dx(uu)*dx(vv)+dy(uu)*dy(vv) ) )
		        	+ int2d(th)(-1*vv)
					+ on(a,b,c,d,e,f,uu= 0);

plot(u,value=1,wait=1);
plot(uu,value=1,wait=1);
plot(u,uu,value=1,wait=1);


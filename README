CArl

PRESENTATION
============
This project is focused on the development of a software based on the Arlequin multi-model coupling method. The main interest of this software is to allow, by its specific structure, the easy interfacing of different third-party softwares (developed and maintained outside of this project), and adapted to each of the models appearing in the coupling. Currently, the software to which CArl is interfaced are : (1) a 1D/2D FEM acoustic code, and (2) Comsol (http://www.comsol.com).
 
REFERENCES
============
Original references for the theory are
[1] H. Ben Dhia. Multiscale mechanical problems: the Arlequin method, Comptes Rendus de l'Academie des Sciences - Series IIB 326 (1998), pp. 899-904.
[2] H. Ben Dhia, G. Rateau. The Arlequin method as a flexible engineering design tool, Int. J. Numer. Meths. Engr. 62 (2005), pp. 1442-1462.

Many other papers make use of the method or describe specific aspects and implementation details.

A non-exhaustive list of papers that make use of the software includes
[3] R. Cottereau, D. Clouteau, H. Ben Dhia, C. Zaccardi. A stochastic-deterministic coupling method for continuum mechanics, Comp. Meth. Appl. Mech. Engr. 200 (2011), pp. 3280-3288.
[4] R. Cottereau. Numerical strategy for the unbiased homogenization of random materials, Int. J. Numer. Meth. Engr. (2013).

This software is mainly developed at laboratoire MSSMat (Ecole Centrale Paris - CNRS).
contact : Regis Cottereau (regis.cottereau@ecp.fr)

It is developed for MATLAB. This may however evolve in future versions.

INSTALLATION
============
Before using the software, you should make sure that you update the matlab path with the appropriate directories. In matlab, run
>> addpath( genpath('install_dir_CArl/'));
where you replace install_dir_CArl by the full path to the directory CArl/

Additionally, you might want to write this line in the startup file (generally located in ~/matlab/startup.m)

This code has not been extensively tested, but should run on Matlab versions R2011a and newer (mainly because the objects TriRep and DelaunayTri are required)

USE
============
The main calling routine is CArl.m

Some examples (in 1D and 2D) can be launched through use of the routine Test.m (see the corresponding help). The tests should run without any problem on computers with around 2Go.
